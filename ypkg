#!/bin/sh
## $Id: ypkg,v 1.9 2013/05/12 07:46:20 yozo Exp $
##

PKGDBPATH=/var/db/pkg
PORTSDIR=/usr/ports
VERBOSE="off"

usage(){
    echo "usage:"
    echo "       $0 [-top]"
    echo "             lists all packages on which no package depends; the default action."
    echo "       $0 pkgname"
    echo "             show dependence tree with pkgname as the root."
    echo "       $0 [-verbose] -check"
    echo "             lists all packages for which updates are available in ports tree"
}

toplevel(){
  for i in ${PKGDBPATH}/* ; do
    if [ ! -f ${i}/+REQUIRED_BY ]; then
        basename ${i}
    fi
  done
}

expand_tabs(){
  if [ $1 -ge 1 ]; then
    echo -n "    ";
    expand_tabs `expr $1 - 1`
  fi
}

## expand_tabs(){
##   count=$1
##   while [ ${count} -ge 1 ]; do
##     echo -n "    ";
##     count=`expr ${count} - 1`
##   done
## }

show_dependents(){ ## arg1: recursion depth,  arg2: pkgname,  arg3: parent pkgname (when arg1 > 0)
    pkgname=`cd "${PKGDBPATH}" && ( ([ -d "$2" ] && echo "$2" ) || (ls -a | grep "$2") )`
    pkgnamematched=`echo ${pkgname} | wc -w`
    if [ $pkgnamematched -ge 2 ]; then
        echo "ERROR! ambiguous package name"
        echo "$pkgname"
        exit 10
    fi
    expand_tabs "$1"
    if [ -f "${PKGDBPATH}/${pkgname}/+REQUIRED_BY" ]; then
      if [ "$1" -eq 0 ]; then
        echo -n "*"
      elif [ -n "`grep -v "$3" "${PKGDBPATH}/${pkgname}/+REQUIRED_BY"`" ]; then
        echo -n "*"
      fi
    fi
    echo "[$1] ${pkgname}"
    requiring="${PKGDBPATH}/${pkgname}/+REQUIRING"
    if [ -f ${requiring} ]; then
      depends=`cat ${requiring}`
      depth=`expr 1 + $1`
      for i in ${depends}; do
        show_dependents `expr 1 + $1` "$i" "${pkgname}"
      done
    fi
}

## show_dependents_child(){ ## arg1: recursion depth,  arg2: pkgname,  arg3: parent pkgname
##     pkgname=`cd ${PKGDBPATH} && ls | grep $2`
##     pkgnamematched=`echo ${pkgname} | wc -w`
##     if [ $pkgnamematched -ge 2 ]; then
##         echo "ERROR! ambiguous package name"
##         echo "$pkgname"
##         exit 20
##     fi
##     expand_tabs "$1"
##     if [ -f "${PKGDBPATH}/${pkgname}/+REQUIRED_BY" ]; then
##       if [ -n "`grep -v "$3" "${PKGDBPATH}/${pkgname}/+REQUIRED_BY"`" ]; then
##         echo -n "*"
##       fi
##     fi
##     echo "[$1] ${pkgname}"
##     requiring="${PKGDBPATH}/${pkgname}/+REQUIRING"
##     if [ -f ${requiring} ]; then
##       depends=`cat ${requiring}`
##       depth=`expr 1 + $1`
##       for i in ${depends}; do
##         ## show_dependents "${depth}" "$i"
##         show_dependents_child `expr 1 + $1` "$i" "${pkgname}"
##       done
##     fi
## }

check(){

  cd "${PKGDBPATH}"
  for i in * ; do
    fullpkgname=
    pkgpathfull=
    len_pkgpathfull=
    pkgpath=
    subpack=
    flav=
    ismystuff=

    ## echo -n "CHECK: ${i} : "
    pkgpathfull=`sed -n '/comment pkgpath=/s/^.* pkgpath=\([^, ][^ ]*\) .*$/\1/p' "${i}"/+CONTENTS`
    len_pkgpathfull=`echo "${pkgpathfull}" | wc -l`
    if [ "${len_pkgpathfull}" -lt 1 -o 1 -gt "${len_pkgpathfull}" ]; then exit 10; fi

    pkgpath=`echo "${pkgpathfull}" | sed -n 's/^\([^,][^,]*\).*$/\1/p'`
    packflav=`echo "${pkgpathfull}" | sed -n 's/^[^,][^,]*\(,.*\)$/\1/p'`

    ## ${packflav} is a comma-separated list of words, where
    ## the first word may be a subpackage name with prepending "-", remaining are a list of flavor names
    if [ -n "${packflav}" ]; then
      case "${packflav}" in
        ,-*)
          subpack=`echo "${packflav}" | sed -n 's/,-\([^,][^,]*\).*/\1/p'`
          flav=`echo "${packflav}" | sed -n 's/,-[^,][^,]*\(.*\)/\1/p' | sed 's/,/ /g' | sed 's/^ //'`
          ## echo "CHECK: subpack($subpack) and flav($flav)"
          ;;
        *)
          flav=`echo "${packflav}" | sed 's/,/ /g' | sed 's/^ //'`
          ## echo "CHECK: flav only ($flav)"
          ;;
      esac
    fi
    if [ x"${VERBOSE}" == x"on" ]; then
      echo "=== ${pkgpathfull} === ${pkgpath} === ${packflav} === ${subpack} === ${flav} ==="
    fi

    if [ -d "${PORTSDIR}/mystuff/${pkgpath}" -a -f "${PORTSDIR}/mystuff/${pkgpath}/Makefile" ]; then
      pkgpath="${PORTSDIR}/mystuff/${pkgpath}"
      ismystuff="*"
    elif [ -d "${PORTSDIR}/${pkgpath}" ]; then
      pkgpath="${PORTSDIR}/${pkgpath}"
    else
      (echo "no pkgpath exists..." 1>&2)
      exit 20
    fi

    if [ -n "${subpack}" ]; then
      fullpkgname=`cd "${pkgpath}" && env FLAVOR="${flav}" make show="FULLPKGNAME-${subpack}"`
    else
      fullpkgname=`cd "${pkgpath}" && env FLAVOR="${flav}" make show=FULLPKGNAME`
    fi

    if [ "${i}" != "${fullpkgname}" ]; then
      echo "${i} : update available as ${fullpkgname} ${ismystuff}"
    fi
  done
}

## main routine starts here
while [ $# -ge 0 ]; do

    if [ $# -eq 0 ]; then
        toplevel
        exit 0
    fi

    case "$1" in
      -h*)
        usage
        exit 0
        ;;
      -top)
        toplevel
        exit 0
        ;;
      -check)
        check
        exit 0
        ;;
      -v*)
        VERBOSE="on"
        echo "CHECK: VERBOSE on"
        shift
        ;;
      *)
        show_dependents 0 "$1"
        exit 0
        ;;
    esac
done

